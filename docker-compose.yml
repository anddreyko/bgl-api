version: "3.7"
services:
  api:
    build:
      context: .docker
      dockerfile: dev/nginx/Dockerfile
    volumes:
      - .:/app
    depends_on:
      - api-php-fpm
    ports:
      - "${APP_EXTERNAL_PORT}:${APP_HTTP_PORT}"

  api-php-fpm:
    build:
      context: .docker
      dockerfile: dev/php-fpm/Dockerfile
    environment:
      APP_ENV: dev
      APP_DEBUG: ${APP_DEBUG}
      PHP_IDE_CONFIG: serverName=API
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      MAILER_DSN: ${MAILER_DSN}
      MAIL_NOREPLY: ${MAIL_NOREPLY}
      FRONTEND_URL: ${FRONTEND_URL}
      MAILER_URL: ${MAILER_URL}
      JWT_KEY: ${JWT_KEY}
      JWT_ALGO: ${JWT_ALGO}
      TWIG_ENABLE_CACHE: ${TWIG_ENABLE_CACHE}
    volumes:
      - .:/app

  api-php-cli:
    build:
      context: .docker
      dockerfile: dev/php-cli/Dockerfile
    environment:
      APP_ENV: dev
      APP_DEBUG: 1
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      MAILER_DSN: ${MAILER_DSN}
      MAIL_NOREPLY: ${MAIL_NOREPLY}
      FRONTEND_URL: ${FRONTEND_URL}
      MAILER_URL: ${MAILER_URL}
      JWT_KEY: ${JWT_KEY}
      JWT_ALGO: ${JWT_ALGO}
      TWIG_ENABLE_CACHE: ${TWIG_ENABLE_CACHE}
    volumes:
      - .:/app

  db-postgres:
    image: postgres:15.2-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - api-postgres:/var/lib/postgresql/data
    ports:
      - "${DB_EXTERNAL_PORT}:${DB_PORT}"

  mailer:
    image: mailhog/mailhog
    ports:
      - "${MAILER_EXTERNAL_PORT}:${MAILER_HTTP_PORT}"

volumes:
  api-postgres:
